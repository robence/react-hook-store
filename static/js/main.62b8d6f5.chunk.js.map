{"version":3,"sources":["store/useStore.js","store/countActions.js","store/userActions.js","Counter.js","App.js","index.js"],"names":["initialState","Object","objectSpread","count","user","loggedIn","StoreContext","createContext","Actions","login","state","logout","increment","decrement","reducer","action","update","act","type","StoreProvider","_ref","children","_useReducer","useReducer","_useReducer2","slicedToArray","dispatch","react_default","a","createElement","Provider","value","useStore","store","_useContext","useContext","Counter","_useStore","inc","useCallback","dec","counter","onClick","App","rootElement","document","getElementById","ReactDOM","render","useStore_StoreProvider"],"mappings":"kJAKMA,EAAYC,OAAAC,EAAA,EAAAD,CAAA,GCLe,CAC/BE,MAAO,GCDuB,CAC9BC,KAAM,CACJC,UAAU,KFQRC,EAAeC,wBAAcP,GAG7BQ,EAAOP,OAAAC,EAAA,EAAAD,CAAA,GEPc,CACzBQ,MAAO,SAAAC,GACL,MAAO,CAAEN,KAAM,CAAEC,UAAU,KAE7BM,OAAQ,SAAAD,GACN,MAAO,CAAEN,KAAM,CAAEC,UAAU,MDPH,CAC1BO,UAAW,SAAAF,GAAK,MAAK,CAAEP,MAAOO,EAAMP,MAAQ,IAC5CU,UAAW,SAAAH,GAAK,MAAK,CAAEP,MAAOO,EAAMP,MAAQ,MDexCW,EAAU,SAACJ,EAAOK,GACtB,IACMC,GAASC,EADHT,EAAQO,EAAOG,OACRR,GACnB,OAAOT,OAAAC,EAAA,EAAAD,CAAA,GAAKS,EAAUM,IAGXG,EAAgB,SAAAC,GAAkB,IAAfC,EAAeD,EAAfC,SAAeC,EACnBC,qBAAWT,EAASd,GADDwB,EAAAvB,OAAAwB,EAAA,EAAAxB,CAAAqB,EAAA,GACtCZ,EADsCc,EAAA,GAC/BE,EAD+BF,EAAA,GAE7C,OACEG,EAAAC,EAAAC,cAACvB,EAAawB,SAAd,CAAuBC,MAAO,CAAErB,QAAOgB,aACpCL,IAKMW,EAAW,SAAAC,GAAS,IAAAC,EACHC,qBAAW7B,GACvC,MAAO,CAAEI,MAFsBwB,EACvBxB,MACQgB,SAFeQ,EAChBR,WGlCFU,EAAA,WAAY,IAAAC,EACGL,IAApBtB,EADiB2B,EACjB3B,MAAOgB,EADUW,EACVX,SACTY,EAAMC,sBAAY,kBAAMb,EAAS,CAAER,KAAM,eAAe,CAACQ,IACzDc,EAAMD,sBAAY,kBAAMb,EAAS,CAAER,KAAM,eAAe,CAACQ,IAE/D,OACEC,EAAAC,EAAAC,cAAA,WACEF,EAAAC,EAAAC,cAAA,WAAMnB,EAAM+B,SACZd,EAAAC,EAAAC,cAAA,UAAQa,QAASJ,GAAjB,eACAX,EAAAC,EAAAC,cAAA,UAAQa,QAASF,GAAjB,iBCPS,SAASG,IAAM,IAAAN,EACAL,IAApBtB,EADoB2B,EACpB3B,MAAOgB,EADaW,EACbX,SACTjB,EAAQ8B,sBAAY,kBAAMb,EAAS,CAAER,KAAM,WAAW,CAACQ,IACvDf,EAAS4B,sBAAY,kBAAMb,EAAS,CAAER,KAAM,YAAY,CAACQ,IAM/D,OACEC,EAAAC,EAAAC,cAAA,WACEF,EAAAC,EAAAC,cAAA,UAAQa,QANQ,WAClBhC,EAAMN,KAAKC,SAAWM,IAAWF,MAK/B,IAAgCC,EAAMN,KAAKC,SAAW,SAAW,SACjEsB,EAAAC,EAAAC,cAAA,WAAMnB,EAAMN,KAAKC,SAAW,YAAc,cAC1CsB,EAAAC,EAAAC,cAAA,uBAAenB,EAAMP,OACrBwB,EAAAC,EAAAC,cAACO,EAAD,OCPN,IAAMQ,EAAcC,SAASC,eAAe,QAC5CC,IAASC,OAAOrB,EAAAC,EAAAC,cARhB,WACI,OACEF,EAAAC,EAAAC,cAACoB,EAAD,KACEtB,EAAAC,EAAAC,cAACc,EAAD,QAKQ,MAAUC","file":"static/js/main.62b8d6f5.chunk.js","sourcesContent":["import React, { createContext, useReducer, useContext } from \"react\"\n\nimport { countInitialState, countActions } from \"./countActions\";\nimport { userInitialState, userActions } from \"./userActions\";\n\nconst initialState = {\n  ...countInitialState,\n  ...userInitialState\n};\n\nconst StoreContext = createContext(initialState);\n\n// this will act as a map of actions that will trigger state mutations\nconst Actions = {\n  ...userActions,\n  ...countActions\n};\n\n// the reducer is called whenever a dispatch action is made.\n// the action.type is a string which maps to a function in Actions.\n// We apply the update to existing state, and return a new copy of state.\nconst reducer = (state, action) => {\n  const act = Actions[action.type];\n  const update = act(state);\n  return { ...state, ...update };\n};\n\nexport const StoreProvider = ({ children }) => {\n  const [state, dispatch] = useReducer(reducer, initialState);\n  return (\n    <StoreContext.Provider value={{ state, dispatch }}>\n      {children}\n    </StoreContext.Provider>\n  );\n};\n\nexport const useStore = store => {\n  const { state, dispatch } = useContext(StoreContext);\n  return { state, dispatch };\n}\n","export const countInitialState = {\n  count: 0\n};\n\nexport const countActions = {\n  increment: state => ({ count: state.count + 1 }),\n  decrement: state => ({ count: state.count - 1 })\n};\n","export const userInitialState = {\n  user: {\n    loggedIn: false\n  }\n};\n\nexport const userActions = {\n  login: state => {\n    return { user: { loggedIn: true } };\n  },\n  logout: state => {\n    return { user: { loggedIn: false } };\n  }\n};\n","import React, { useCallback } from 'react';\nimport { useStore } from './store/useStore';\n\nexport default function () {\n  const { state, dispatch } = useStore();\n  const inc = useCallback(() => dispatch({ type: 'increment'}), [dispatch]);\n  const dec = useCallback(() => dispatch({ type: 'decrement'}), [dispatch]);\n\n  return (\n    <div>\n      <div>{state.counter}</div>\n      <button onClick={inc}>+ Increment</button>\n      <button onClick={dec}>- Decrement</button>\n    </div>\n  );\n}\n","import React, { useCallback } from 'react';\nimport { useStore } from './store/useStore';\n\nimport Counter from './Counter'\n\nexport default function App() {\n  const { state, dispatch } = useStore();\n  const login = useCallback(() => dispatch({ type: 'login'}), [dispatch]);\n  const logout = useCallback(() => dispatch({ type: 'logout'}), [dispatch]);\n\n  const handleClick = () => {\n    state.user.loggedIn ? logout() : login();\n  }\n\n  return (\n    <div>\n      <button onClick={handleClick}> {state.user.loggedIn ? 'Logout' : 'Login'}</button>\n      <div>{state.user.loggedIn ? 'logged in' : 'logged out'}</div>\n      <div>Counter: {state.count}</div>\n      <Counter/>\n    </div>\n  );\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { StoreProvider } from './store/useStore';\nimport App from './App';\n\nfunction Main() {\n    return (\n      <StoreProvider>\n        <App />\n      </StoreProvider>\n    );\n}\nconst rootElement = document.getElementById('root')\nReactDOM.render(<Main />, rootElement);\n"],"sourceRoot":""}